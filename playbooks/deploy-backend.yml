---
- name: Deploy and run backend
  hosts: backend
  become: true
  vars:
    ansible_user: ubuntu
    monorepo_dest: "/opt/devops-rampup"
    db_host: "{{ lookup('env', 'DB_HOST') }}"
    db_user: "{{ lookup('env', 'DB_USER') }}"
    db_password: "{{ lookup('env', 'DB_PASSWORD') }}"
    db_name: "movie_db"
    backend_port: 80
    backend_path: "{{ monorepo_dest }}/movie-analyst-api"
    sql_schema_file: "{{ backend_path }}/schema.sql"

  tasks:
    - name: Install/Update dependencies if code changed
      shell: pnpm install
      args:
        chdir: "{{ backend_path }}"
      become_user: "{{ ansible_user }}"

    - name: Install MySQL client
      apt:
        name: mysql-client
        state: present

    - name: Install Python MySQL library
      apt:
        name: python3-pymysql
        state: present

    - name: Execute SQL schema file (creates DB and tables if not exist)
      shell: mysql -h {{ db_host }} -u {{ db_user }} -p{{ db_password }} < {{ sql_schema_file }}
      args:
        chdir: "{{ backend_path }}"
      become_user: "{{ ansible_user }}"

    - name: Run database seed script
      shell: node seeds.js
      args:
        chdir: "{{ backend_path }}"
      environment:
        DB_HOST: "{{ db_host }}"
        DB_USER: "{{ db_user }}"
        DB_PASS: "{{ db_password }}"
        DB_NAME: "{{ db_name }}"
        NODE_ENV: "production"
      become_user: "{{ ansible_user }}"
      register: seed_result

    - name: Start backend with environment variables
      shell: |
        node server.js
      args:
        chdir: "{{ backend_path }}"
      environment:
        DB_HOST: "{{ db_host }}"
        DB_USER: "{{ db_user }}"
        DB_PASS: "{{ db_password }}"
        DB_NAME: "{{ db_name }}"
        PORT: "{{ backend_port }}"
        NODE_ENV: "production"
      become_user: "{{ ansible_user }}"
